{"version":3,"file":"static/js/528.a46b81a6.chunk.js","mappings":"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","sources":["components/AdminNav.js","pages/admin/AdminDashboard.js","functions/AdminFunction.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminNav = () => {\r\n  return (\r\n    <nav>\r\n      <ul className=\"nav flex-column\">\r\n        <li className=\"nav-item\">\r\n          <Link to={\"/admin/dashboard\"} className=\"nav-link\">\r\n            Dashboard\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to={\"/admin/product\"} className=\"nav-link\">\r\n            product\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to={\"/admin/products\"} className=\"nav-link\">\r\n            products\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to={\"/admin/category\"} className=\"nav-link\">\r\n            Category\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to={\"/admin/subcategory\"} className=\"nav-link\">\r\n            Sub Category\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to={\"/admin/coupons\"} className=\"nav-link\">\r\n            Coupons\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link to={\"/user/password\"} className=\"nav-link\">\r\n            Password\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AdminNav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AdminNav from \"../../components/AdminNav\";\r\nimport {\r\n  getAllOrdersForAdmin,\r\n  getOrderStatus,\r\n} from \"../../functions/AdminFunction\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  // Define the order status options based on the enum values\r\n  const orderStatusOptions = [\r\n    \"Not Processed\",\r\n    \"Processing\",\r\n    \"Dispatched\",\r\n    \"Cancelled\",\r\n    \"Completed\",\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getAllOrdersForAdmin(user.token).then((response) => {\r\n      console.log(response.data);\r\n      // Set the orders received from the API response\r\n      setOrders(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleOrderAction = async (orderId, selectedStatus) => {\r\n    console.log(\"Handling action for order:\", orderId);\r\n    try {\r\n      const data = { orderId, orderStatus: selectedStatus };\r\n      const response = await getOrderStatus(user.token, data);\r\n      console.log(\"Order status updated:\", response.data);\r\n\r\n      // Update the order status in the frontend state\r\n      const updatedOrders = orders.map((order) =>\r\n        order._id === orderId ? { ...order, status: selectedStatus } : order\r\n      );\r\n      setOrders(updatedOrders);\r\n    } catch (error) {\r\n      console.error(\"Error updating order status:\", error);\r\n    }\r\n  };\r\n\r\n  const renderOrders = () => {\r\n    return orders.map((order, index) => (\r\n      <tr key={index}>\r\n        <td>{order._id}</td>\r\n        <td>{order.orderdBy.name}</td>\r\n        <td>{(order.totalPrice / 100).toFixed(2)}</td>\r\n        <td>\r\n          <select\r\n            value={order.status} // Use the order's status\r\n            className=\"form-control\"\r\n            onChange={(e) => handleOrderAction(order._id, e.target.value)}\r\n          >\r\n            {/* Render order status options */}\r\n            {orderStatusOptions.map((status, index) => (\r\n              <option key={index} value={status}>\r\n                {status}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </td>\r\n        <td>\r\n          {/* Update the onClick handler to pass order status */}\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => handleOrderAction(order._id, order.status)}\r\n          >\r\n            Update Status\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <AdminNav />\r\n          </div>\r\n\r\n          <div className=\"col\">\r\n            <h2>Admin Dashboard</h2>\r\n            <table className=\"table table-bordered\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Order ID</th>\r\n                  <th>Ordered By</th>\r\n                  <th>Total Price</th>\r\n                  <th>Order Status</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>{renderOrders()}</tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import axios from \"axios\";\r\n\r\nexport const getAllOrdersForAdmin = async (authtoken) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_API}/admin/allorders`,\r\n      {\r\n        headers: {\r\n          authtoken,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getOrderStatus = async (authtoken, data) => {\r\n  try {\r\n    const response = await axios.put(\r\n      `${process.env.REACT_APP_API}/admin/allorders/order-status`,\r\n      {\r\n        data,   \r\n      },\r\n      {\r\n        headers: {\r\n          authtoken,\r\n        },\r\n      }\r\n    );\r\n    return response;\r\n  } catch (error) {\r\n    console.log(error);\r\n    throw error;\r\n  }\r\n};\r\n"],"names":["AdminNav","_jsx","children","_jsxs","className","Link","to","AdminDashboard","orders","setOrders","useState","user","useSelector","state","orderStatusOptions","useEffect","async","axios","get","concat","process","headers","authtoken","error","console","log","getAllOrdersForAdmin","token","then","response","data","handleOrderAction","orderId","selectedStatus","orderStatus","put","getOrderStatus","updatedOrders","map","order","_id","status","_Fragment","index","orderdBy","name","totalPrice","toFixed","value","onChange","e","target","onClick"],"sourceRoot":""}