{"version":3,"file":"static/js/604.f6121484.chunk.js","mappings":"6LAMA,MAkBA,EAlBmBA,IAA4B,IAA3B,SAAEC,KAAaC,GAAMF,EACvC,MAAM,KAAEG,IAASC,EAAAA,EAAAA,KAAaC,IAAK,IAAWA,OACvCC,EAAIC,IAASC,EAAAA,EAAAA,WAAS,GAa7B,OAXAC,EAAAA,EAAAA,YAAU,KACJN,GAAQA,EAAKO,QACfC,EAAAA,EAAAA,IAAaR,EAAKO,OACfE,MAAMC,IAELN,GAAM,EAAK,IAEZO,OAAOC,GAAQC,QAAQC,IAAI,oBAAqBF,IACrD,GACC,CAACZ,IAEGG,GAAKY,EAAAA,EAAAA,KAACC,EAAAA,GAAM,KAAMD,EAAAA,EAAAA,KAACE,EAAAA,EAAO,GAAG,C,oECnBtC,MA+BA,EA/BgBpB,IAAyB,IAAxB,KAAEqB,EAAO,SAASrB,EACjC,MAAOsB,EAAOC,IAAYf,EAAAA,EAAAA,UAAS,GAC7BgB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAajB,OAXAlB,EAAAA,EAAAA,YAAU,KACR,MAAMmB,EAAWC,aAAY,KAC3BN,GAAUO,KAAgBA,GAAU,GACnC,KAKH,OAJU,IAAVR,GACEE,EAAS,IAADO,OAAKV,GAAQ,CACnBhB,MAAOqB,EAASM,WAEb,IAAMC,cAAcL,EAAS,GACnC,CAACN,EAAOE,EAAUE,EAAUL,KAG7BH,EAAAA,EAAAA,KAAAgB,EAAAA,SAAA,CAAAjC,UACEkC,EAAAA,EAAAA,MAAA,OACEC,MAAM,+DACNC,MAAO,CAAEC,OAAQ,SAAUrC,SAAA,EAE3BkC,EAAAA,EAAAA,MAAA,MAAII,UAAU,cAAatC,SAAA,CAAC,sBAAoBqB,EAAM,eACtDJ,EAAAA,EAAAA,KAAA,OAAKkB,MAAM,iBAAiBI,KAAK,SAAQvC,UACvCiB,EAAAA,EAAAA,KAAA,QAAMkB,MAAM,kBAAiBnC,SAAC,qBAGjC,C","sources":["components/AdminRoute.js","components/Spinner.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Spinner from \"./Spinner\";\r\nimport { CurrentAdmin } from \"../functions/authFunction\";\r\n\r\nconst AdminRoute = ({ children, ...rest }) => {\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n  const [ok, setOk] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      CurrentAdmin(user.token)\r\n        .then((res) => {\r\n          // console.log(\"Current Admin RES\", res);\r\n          setOk(true);\r\n        })\r\n        .catch((err) => console.log(\"Admin Route Error\", err));\r\n    }\r\n  }, [user]);\r\n\r\n  return ok ? <Outlet /> : <Spinner />;\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nconst Spinner = ({ path = \"login\" }) => {\r\n  const [count, setCount] = useState(5);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount((prevValue) => --prevValue);\r\n    }, 1000);\r\n    count === 0 &&\r\n      navigate(`/${path}`, {\r\n        state: location.pathname,\r\n      });\r\n    return () => clearInterval(interval);\r\n  }, [count, navigate, location, path]);\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        class=\"d-flex flex-column justify-content-center align-items-center\"\r\n        style={{ height: \"100vh\" }}\r\n      >\r\n        <h3 className=\"text-center\">Redirecting you in {count} seconds</h3>\r\n        <div class=\"spinner-border\" role=\"status\">\r\n          <span class=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n"],"names":["_ref","children","rest","user","useSelector","state","ok","setOk","useState","useEffect","token","CurrentAdmin","then","res","catch","err","console","log","_jsx","Outlet","Spinner","path","count","setCount","navigate","useNavigate","location","useLocation","interval","setInterval","prevValue","concat","pathname","clearInterval","_Fragment","_jsxs","class","style","height","className","role"],"sourceRoot":""}