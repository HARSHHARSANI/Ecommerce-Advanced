{"version":3,"file":"static/js/716.6a8f89e5.chunk.js","mappings":"oJAGA,MAwBA,EAxBgBA,KAEZC,EAAAA,EAAAA,KAAA,OAAAC,UACEC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kBAAiBF,SAAA,EAC7BD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,sBAAqBF,UACjCD,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAI,gBAAiBF,UAAU,WAAUF,SAAC,eAIlDD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qBAAoBF,UAChCD,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAI,iBAAkBF,UAAU,WAAUF,SAAC,gBAInDD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qBAAoBF,UAChCD,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAI,iBAAkBF,UAAU,WAAUF,SAAC,mB,uKCF3D,MAAMK,EAASC,EAAAA,GAAWC,OAAO,CAC/BC,KAAM,CACJC,cAAe,MACfC,gBAAiB,WAEnBC,QAAS,CACPC,OAAQ,GACRC,QAAS,GACTC,SAAU,KAkJd,EA9IgBC,KACd,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KAEvC,KAAEC,IAASC,EAAAA,EAAAA,KAAaC,IAAK,IAAWA,OAE9CC,EAAAA,EAAAA,YAAU,KC/BgBC,gBACHC,EAAAA,EAAMC,IAAI,GAADC,OAC3BC,iDAAyB,qBAC5B,CACEC,QAAS,CACPC,eD2BJC,CAAaX,EAAKY,OAAOC,MAAMC,IAC7BC,QAAQC,IAAIF,EAASG,MACrBnB,EAAcgB,EAASG,KAAK,GAC5B,GACD,IAEH,MAAMC,EAAsBC,IAC1B,MAAMC,GACJxC,EAAAA,EAAAA,KAACyC,EAAAA,GAAQ,CAAAxC,UACPD,EAAAA,EAAAA,KAAC0C,EAAAA,GAAI,CAACC,KAAK,KAAKC,MAAOtC,EAAOG,KAAKR,UACjCC,EAAAA,EAAAA,MAAC2C,EAAAA,GAAI,CAACD,MAAOtC,EAAOM,QAAQX,SAAA,EAC1BC,EAAAA,EAAAA,MAAC4C,EAAAA,EAAI,CAAA7C,SAAA,CAAC,yBAAuBsC,EAAMQ,QACnC7C,EAAAA,EAAAA,MAAC4C,EAAAA,EAAI,CAAA7C,SAAA,CAAC,SAAOsC,EAAMS,cACnB9C,EAAAA,EAAAA,MAAC4C,EAAAA,EAAI,CAAA7C,SAAA,CAAC,aAAWmB,EAAK6B,UACtBjD,EAAAA,EAAAA,KAAC8C,EAAAA,EAAI,CAAA7C,SAAC,gCACND,EAAAA,EAAAA,KAAC8C,EAAAA,EAAI,CAAA7C,SAAC,eACND,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAAA5C,SACFsC,EAAMW,SAASC,KAAI,CAACC,EAASC,KAAK,IAAAC,EAAA,OACjCpD,EAAAA,EAAAA,MAAC4C,EAAAA,EAAI,CAAA7C,SAAA,CACa,QADbqD,EACFF,EAAQA,eAAO,IAAAE,OAAA,EAAfA,EAAiBC,MAAM,YAAKH,EAAQI,MAAMC,QAAQ,KAD1CJ,EAEJ,OAGXnD,EAAAA,EAAAA,MAAC4C,EAAAA,EAAI,CAAA7C,SAAA,CAAC,uBAAgBsC,EAAMmB,WAAa,KAAKD,QAAQ,aAM9D,OACEzD,EAAAA,EAAAA,KAAC2D,EAAAA,GAAe,CACdC,SAAUpB,EACVqB,SAAQ,WAAAlC,OAAaY,EAAMQ,IAAG,QAAO9C,SAEpC6D,IAAA,IAAC,KAAEC,EAAI,IAAEC,EAAG,QAAEC,EAAO,MAAEC,GAAOJ,EAAA,OAC7BG,EAAU,sBAAwB,cAAc,GAElC,EAyBhBE,EAAoB5B,IAEtBrC,EAAAA,EAAAA,MAAA,SAAOC,UAAU,uBAAsBF,SAAA,EACrCD,EAAAA,EAAAA,KAAA,SAAOG,UAAU,cAAaF,UAC5BC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,WACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,iBACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,WACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,WACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,cACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,cACJD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,sBAIRD,EAAAA,EAAAA,KAAA,SAAAC,SACGsC,EAAMW,SAASC,KAAI,CAACC,EAASC,KAAK,IAAAe,EAAAC,EAAAC,EAAA,OACjCpE,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAoB,QAApBmE,EAAKhB,EAAQA,eAAO,IAAAgB,OAAA,EAAfA,EAAiBb,SACtBvD,EAAAA,EAAAA,KAAA,MAAAC,SAAoB,QAApBoE,EAAKjB,EAAQA,eAAO,IAAAiB,OAAA,EAAfA,EAAiBE,eACtBrE,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,SAAEmD,EAAQI,MAAQJ,EAAQI,MAAMC,QAAQ,GAAK,OACjDzD,EAAAA,EAAAA,KAAA,MAAAC,SAAKmD,EAAQoB,QAAW,KACxBxE,EAAAA,EAAAA,KAAA,MAAAC,SAAKmD,EAAQqB,SACbzE,EAAAA,EAAAA,KAAA,MAAAC,SACgC,QAAd,QAAfqE,EAAAlB,EAAQA,eAAO,IAAAkB,OAAA,EAAfA,EAAiBI,WAChB1E,EAAAA,EAAAA,KAAC2E,EAAAA,EAAmB,CAAC/B,MAAO,CAAE4B,MAAO,YAErCxE,EAAAA,EAAAA,KAAC4E,EAAAA,EAAmB,CAAChC,MAAO,CAAE4B,MAAO,YAGzCxE,EAAAA,EAAAA,KAAA,MAAAC,SACGmD,EAAQM,aAAemB,MAAMzB,EAAQM,aACjCN,EAAQM,WAAa,KAAKD,QAAQ,GACnC,OAhBCJ,EAkBJ,OAGTrD,EAAAA,EAAAA,KAAA,SAAAC,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAI8E,QAAQ,IAAG7E,SAAC,YAChBC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,SAEDsC,EAAMmB,aAAemB,MAAMtC,EAAMmB,aAC7BnB,EAAMmB,WAAa,KAAKD,QAAQ,GACjC,cAQhB,OACEzD,EAAAA,EAAAA,KAAA+E,EAAAA,SAAA,CAAA9E,UAEED,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBF,UAC9BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,MAAKF,SAAA,EAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,WAAUF,UACvBD,EAAAA,EAAAA,KAACD,EAAAA,EAAO,OAEVG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBF,SAAA,EAC/BC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,QAAQyC,MAAO,CAAEoC,aAAc,UAAW/E,SAAA,CACrD,IACAgB,EAAWgE,OAAS,oBAAsB,mBApF9ChE,EAAWkC,KAAI,CAACZ,EAAO2C,KAE1BhF,EAAAA,EAAAA,MAAA,OAAaC,UAAU,gBAAeF,SAAA,EACpCC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,qBACkB,KACnBD,EAAAA,EAAAA,KAAA,QAAMG,UAAU,gBAAeF,SAAC,wBAA2B,IAC1DsC,EAAM4C,kBAAmB,KAC1BnF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,gBAAeF,SAAC,oBAAuB,IACtDsC,EAAM6C,eAERjB,EAAiB5B,IAClBvC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,MAAKF,UAClBD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,kBAAiBF,UAC9BD,EAAAA,EAAAA,KAAA,KAAAC,SAAIqC,EAAmBC,WAXnB2C,cAwFX,C","sources":["components/userNav.js","pages/user/History.js","functions/orderFunctions.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UserNav = () => {\r\n  return (\r\n    <nav>\r\n      <ul className=\"nav flex-column\">\r\n        <li className=\"nav-item mt-3 mx-3 \">\r\n          <Link to={\"/user/history\"} className=\"nav-link\">\r\n            History\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item mt-3 mx-3\">\r\n          <Link to={\"/user/password\"} className=\"nav-link\">\r\n            Password\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item mt-3 mx-3\">\r\n          <Link to={\"/user/wishlist\"} className=\"nav-link\">\r\n            Wishlist\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default UserNav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport UserNav from \"../../components/userNav\";\r\nimport { getAllOrders } from \"../../functions/orderFunctions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { CloseCircleOutlined, CheckCircleOutlined } from \"@ant-design/icons\";\r\nimport toast from \"react-toastify\";\r\nimport {\r\n  PDFDownloadLink,\r\n  PDFViewer,\r\n  Page,\r\n  Text,\r\n  View,\r\n  Document,\r\n  StyleSheet,\r\n} from \"@react-pdf/renderer\";\r\n\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#E4E4E4\",\r\n  },\r\n  section: {\r\n    margin: 10,\r\n    padding: 10,\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nconst History = () => {\r\n  const [userOrders, setUserOrders] = useState([]);\r\n\r\n  const { user } = useSelector((state) => ({ ...state }));\r\n\r\n  useEffect(() => {\r\n    getAllOrders(user.token).then((response) => {\r\n      console.log(response.data);\r\n      setUserOrders(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const generateInvoicePDF = (order) => {\r\n    const MyDocument = (\r\n      <Document>\r\n        <Page size=\"A4\" style={styles.page}>\r\n          <View style={styles.section}>\r\n            <Text>Invoice for Order ID: {order._id}</Text>\r\n            <Text>Date: {order.createdAt}</Text>\r\n            <Text>Customer: {user.email}</Text>\r\n            <Text>--------------------------</Text>\r\n            <Text>Products:</Text>\r\n            <View>\r\n              {order.products.map((product, index) => (\r\n                <Text key={index}>\r\n                  {product.product?.title} - ₹{product.price.toFixed(2)}\r\n                </Text>\r\n              ))}\r\n            </View>\r\n            <Text>Total Price: ₹{(order.totalPrice / 100).toFixed(2)}</Text>\r\n          </View>\r\n        </Page>\r\n      </Document>\r\n    );\r\n\r\n    return (\r\n      <PDFDownloadLink\r\n        document={MyDocument}\r\n        fileName={`invoice_${order._id}.pdf`}\r\n      >\r\n        {({ blob, url, loading, error }) =>\r\n          loading ? \"Loading document...\" : \"Download PDF\"\r\n        }\r\n      </PDFDownloadLink>\r\n    );\r\n  };\r\n\r\n  const showEachOrders = () => {\r\n    return userOrders.map((order, i) => {\r\n      return (\r\n        <div key={i} className=\"m-5 p-3 card \">\r\n          <p>\r\n            Show payment info:{\" \"}\r\n            <span className=\"fw-bold mx-3 \">Razorpay_Order_id :</span>{\" \"}\r\n            {order.razorpay_order_id}{\" \"}\r\n            <span className=\"fw-bold mx-3 \">Order Status : </span>{\" \"}\r\n            {order.orderStatus}\r\n          </p>\r\n          {showOrderInTable(order)}\r\n          <div className=\"row\">\r\n            <div className=\"col text-center\">\r\n              <p>{generateInvoicePDF(order)}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  const showOrderInTable = (order) => {\r\n    return (\r\n      <table className=\"table table-bordered\">\r\n        <thead className=\"thead-light\">\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>Description</th>\r\n            <th>Price</th>\r\n            <th>color</th>\r\n            <th>Quantity</th>\r\n            <th>Shipping</th>\r\n            <th>Total Price</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {order.products.map((product, index) => (\r\n            <tr key={index}>\r\n              <td>{product.product?.title}</td>\r\n              <td>{product.product?.description}</td>\r\n              <td>₹{product.price ? product.price.toFixed(2) : \"\"}</td>\r\n              <td>{product.color}</td> {/* Added color column */}\r\n              <td>{product.count}</td>\r\n              <td>\r\n                {product.product?.shipping == \"Yes\" ? (\r\n                  <CheckCircleOutlined style={{ color: \"green\" }} />\r\n                ) : (\r\n                  <CloseCircleOutlined style={{ color: \"red\" }} />\r\n                )}\r\n              </td>\r\n              <td>\r\n                {product.totalPrice && !isNaN(product.totalPrice)\r\n                  ? (product.totalPrice / 100).toFixed(2)\r\n                  : \"\"}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n        <tfoot>\r\n          <tr>\r\n            <td colSpan=\"6\">Total:</td>\r\n            <td>\r\n              ₹\r\n              {order.totalPrice && !isNaN(order.totalPrice)\r\n                ? (order.totalPrice / 100).toFixed(2)\r\n                : \"\"}\r\n            </td>\r\n          </tr>\r\n        </tfoot>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {JSON.stringify(userOrders)} */}\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2\">\r\n            <UserNav />\r\n          </div>\r\n          <div className=\"col text-center \">\r\n            <h4 className=\"mt-4 \" style={{ marginBottom: \" -15px\" }}>\r\n              {\" \"}\r\n              {userOrders.length ? \"User History Page\" : \"No Orders Yet\"}\r\n            </h4>\r\n            {showEachOrders()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default History;\r\n","import axios from \"axios\";\r\n\r\nexport const getAllOrders = async (authtoken) => {\r\n  const response = await axios.get(\r\n    `${process.env.REACT_APP_API}/orders/allOrders`,\r\n    {\r\n      headers: {\r\n        authtoken,\r\n      },\r\n    }\r\n  );\r\n\r\n  return response;\r\n};\r\n"],"names":["UserNav","_jsx","children","_jsxs","className","Link","to","styles","StyleSheet","create","page","flexDirection","backgroundColor","section","margin","padding","flexGrow","History","userOrders","setUserOrders","useState","user","useSelector","state","useEffect","async","axios","get","concat","process","headers","authtoken","getAllOrders","token","then","response","console","log","data","generateInvoicePDF","order","MyDocument","Document","Page","size","style","View","Text","_id","createdAt","email","products","map","product","index","_product$product","title","price","toFixed","totalPrice","PDFDownloadLink","document","fileName","_ref","blob","url","loading","error","showOrderInTable","_product$product2","_product$product3","_product$product4","description","color","count","shipping","CheckCircleOutlined","CloseCircleOutlined","isNaN","colSpan","_Fragment","marginBottom","length","i","razorpay_order_id","orderStatus"],"sourceRoot":""}